@model ChatViewModel

@{
    var messageCounter = 0;
}

<div class="d-flex flex-column gap-4">
    @if (Model.Messages.Count() == 0)
    {
        <h3 class="text-danger fw-bold text-center">No messages available</h3>
    }
    else
    {
        <div class="d-flex flex-column gap-2">
            <h2>Messages:</h2>
            <div class="d-flex flex-column gap-3">
                @foreach (var message in Model.Messages)
                {
                    <div class="card @(messageCounter % 2 == 0 ? "bg-light" : "bg-white") col-6">
                        <div class="card-body">
                            <blockquote class="blockquote mb-0">
                                <p>@message.Text</p>
                                <footer class="blockquote-footer">@message.User</footer>
                            </blockquote>
                        </div>
                    </div>
                    <span class="visually-hidden">
                        @(messageCounter++)
                    </span>
                }
            </div>
        </div>
    }

    <form method="post" asp-action="Send" class="d-flex flex-column gap-2 @(Model.Messages.Count() == 0 ? "align-items-center" : "col-2")">
        <div class="form-group d-flex flex-column gap-1">
            <label for="message">Message</label>
            <input type="text" name="text" class="form-control" id="message" placeholder="Enter message">
        </div>
        <div class="form-group d-flex flex-column gap-1">
            <label for="user">User</label>
            <input type="text" name="user" class="form-control" id="user" placeholder="Enter username">
        </div>
        @if (Model.Messages.Count() == 0)
        {
            <button type="submit" class="btn btn-success mt-2">Start Chat</button>
        }
        else
        {
            <button type="submit" class="btn btn-primary mt-2 align-self-start">Submit</button>
        }
    </form>
</div>